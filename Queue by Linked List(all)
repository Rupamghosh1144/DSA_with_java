//queue implementation by linked list
public class queuealllinked{
    public static class Node{
        int data;
        Node next;
        Node(int x){
            data=x;
        }
    }
    public static class queuell{
        int size=0;
        Node head=null;
        Node tail=null;
        public void add(int x){
            Node temp=new Node(x);
            if(size==0){
                head=tail=temp;
            }else{
                tail.next=temp;
                tail=temp;
            }
            size++;
        }
        public int peek(){
            if(size==0){
                System.out.println("Queue is empty");
                return -1;
            }else{
                return head.data;
            }
        }
        public void remove(){
            if(size==0){
                System.out.println("Queue is empty");
                return;
            }else{
            int x=head.data;
            head=head.next;
            System.out.println(x);
            size--;
            }
        }
        
        public void display(){
            Node temp=head;
            while(temp!=null){
                System.out.print(temp.data+" ");
                temp=temp.next;
            }
        }
    }
    public static void main(String[] args){
        queuell q=new queuell();
        q.add(1);
        q.add(2);
        System.out.println(q.peek());
        System.out.println();
        q.display();
        System.out.println();
        q.add(11);
        q.add(22);
        q.display();
        System.out.println();
        q.remove();
        q.display();
        System.out.println();
        System.out.println(q.size);
        System.out.println(q.peek());
    }
}
